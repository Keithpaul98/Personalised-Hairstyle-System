"""
Django settings for salon_management project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sfuh!^jkw+p5^za$v17lq3br!gikoilpky9bs)wcu%*!k0)!_m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'User_Management',
    'payments',
    'appointments',
    'services',
    'reporting',
    'Stock_Management',
    'notifications',
    'conversations',
    'virtual_tryon',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'User_Management.middleware.RoleBasedAccessMiddleware',
]

ROOT_URLCONF = 'salon_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'notifications.context_processors.notification_processor',
                'conversations.context_processors.unread_messages_count',
                'appointments.context_processors.appointment_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'salon_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Impact_Looks',
        'USER': 'postgres',
        'PASSWORD': '1234',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Media files (User uploaded content)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR  # Point to the salon_management directory which contains service_images

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom User Model
AUTH_USER_MODEL = 'User_Management.CustomUser'

# Stripe API Key
STRIPE_PUBLIC_KEY = 'pk_test_51Pp3QVIwKycCH0VKsOhdAYIcAAn7eDFqkd80Wo2vrtKgFoAotAZfHgikUZrWCQU4pGdt8HWDt6WO8nFiljebAasT00ltNWvIH6'
STRIPE_SECRET_KEY = 'sk_test_51Pp3QVIwKycCH0VKhIX4GxtbKnx1w3oOsfXcrmGsgoeTNIvXqujpcVjPzYIuQOoGEplnhYNObaHGHWTPaHMYyVLg00hAfVAWO1'

#stripe webhook secret
STRIPE_WEBHOOK_SECRET = 'whsec_b358ded7ecfa583bbfc7c73cb58a3c364b8dbcb838a51d739bb47d66a0596b6a'

# Add these settings
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'virtual_tryon': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}



# Perfect Corp API settings
PERFECT_CORP_API_KEY = "GJUDRoWWTSMIFXDPQ3DauTRncehPkOSf"
PERFECT_CORP_API_SECRET = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCsD93uHNU14P4aXhF4LW4n8WGtUlx5jIw8uEx8oZy/8c66jDyhhIq9DMsbjJcVpHG1Tf0zexmE+FfkcqK05WgDcj2QK+nU9HSJjPE/oyFjFV5NlMG27x0AyNumzv2WD6+7qdt49srXKpttxLEe2q7qjoMmkxJNRFLXZKdCCw4BaQIDAQAB"
PERFECT_CORP_ACCESS_TOKEN = "mock_token_4045bff12f"  # This will be obtained programmatically